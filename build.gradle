plugins {
    id 'java'
    id 'idea'
    id 'org.springframework.boot' version '3.0.1'
    id 'io.spring.dependency-management' version '1.1.0'
}

group = 'com.hyron.learn'
version = '1.0'
sourceCompatibility = '17'

repositories {
    mavenCentral()
}

dependencies {
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
    annotationProcessor 'org.projectlombok:lombok'
    annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.3.Final'

    // lombok
    compileOnly 'org.projectlombok:lombok'

    implementation 'org.springframework.boot:spring-boot-starter'
    implementation 'org.springframework.boot:spring-boot-starter-web'

    // mapstruct
    implementation 'org.mapstruct:mapstruct:1.5.3.Final'
    implementation 'org.mapstruct:mapstruct-processor:1.5.3.Final'
    // jackson
    implementation 'com.fasterxml.jackson.core:jackson-core'
    implementation 'com.fasterxml.jackson.core:jackson-annotations'
    implementation 'com.fasterxml.jackson.core:jackson-databind'
    implementation 'com.fasterxml.jackson.dataformat:jackson-dataformat-xml'
    // apache-common
    implementation 'org.apache.commons:commons-lang3:3.12.0'
    // inject
    implementation 'jakarta.inject:jakarta.inject-api:2.0.1'

    testAnnotationProcessor 'org.projectlombok:lombok'
    testCompileOnly 'org.projectlombok:lombok'

    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude(group: 'org.junit.vintage')
    }

    // assert
    testImplementation 'org.assertj:assertj-core'
    // mockito
    testImplementation 'org.mockito:mockito-inline'
    testImplementation 'org.mockito:mockito-core'
}

tasks.named('test') {
    useJUnitPlatform()
    maxHeapSize = '4G'
}
